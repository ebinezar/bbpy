################################################## 
# NauService_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from NauService_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class NauServiceLocator:
    NauServicePortType_address = "http://dev.bblearn.nau.edu:80/webapps/ws/services/NauService"
    def getNauServicePortTypeAddress(self):
        return NauServiceLocator.NauServicePortType_address
    def getNauServicePortType(self, url=None, **kw):
        if url:
            url = url + "/webapps/ws/services/NauService"
            return NauServiceSOAP11BindingSOAP(url, **kw)
        else:
            return NauServiceSOAP11BindingSOAP(NauServiceLocator.NauServicePortType_address, **kw)

# Methods
class NauServiceSOAP11BindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: CreateUpdateUser
    def CreateUpdateUser(self, request):
        if isinstance(request, CreateUpdateUserRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:CreateUpdateUser", **kw)
        # no output wsaction
        response = self.binding.Receive(CreateUpdateUserResponse.typecode)
        return response

    # op: ChangeEnrollmentStatus
    def ChangeEnrollmentStatus(self, request):
        if isinstance(request, ChangeEnrollmentStatusRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:ChangeEnrollmentStatus", **kw)
        # no output wsaction
        response = self.binding.Receive(ChangeEnrollmentStatusResponse.typecode)
        return response

    # op: IsRolledup
    def IsRolledup(self, request):
        if isinstance(request, IsRolledupRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:IsRolledup", **kw)
        # no output wsaction
        response = self.binding.Receive(IsRolledupResponse.typecode)
        return response

    # op: GetIdsFromBatchUids
    def GetIdsFromBatchUids(self, request):
        if isinstance(request, GetIdsFromBatchUidsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:GetIdsFromBatchUids", **kw)
        # no output wsaction
        response = self.binding.Receive(GetIdsFromBatchUidsResponse.typecode)
        return response

    # op: RollupCourse
    def RollupCourse(self, request):
        if isinstance(request, RollupCourseRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:RollupCourse", **kw)
        # no output wsaction
        response = self.binding.Receive(RollupCourseResponse.typecode)
        return response

    # op: BatchChangeEnrollmentStatus
    def BatchChangeEnrollmentStatus(self, request):
        if isinstance(request, BatchChangeEnrollmentStatusRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="urn:BatchChangeEnrollmentStatus", **kw)
        # no output wsaction
        response = self.binding.Receive(BatchChangeEnrollmentStatusResponse.typecode)
        return response

CreateUpdateUserRequest = ns0.CreateUpdateUser_Dec().pyclass

CreateUpdateUserResponse = ns0.CreateUpdateUserResponse_Dec().pyclass

ChangeEnrollmentStatusRequest = ns0.ChangeEnrollmentStatus_Dec().pyclass

ChangeEnrollmentStatusResponse = ns0.ChangeEnrollmentStatusResponse_Dec().pyclass

IsRolledupRequest = ns0.IsRolledup_Dec().pyclass

IsRolledupResponse = ns0.IsRolledupResponse_Dec().pyclass

GetIdsFromBatchUidsRequest = ns0.GetIdsFromBatchUids_Dec().pyclass

GetIdsFromBatchUidsResponse = ns0.GetIdsFromBatchUidsResponse_Dec().pyclass

RollupCourseRequest = ns0.RollupCourse_Dec().pyclass

RollupCourseResponse = ns0.RollupCourseResponse_Dec().pyclass

BatchChangeEnrollmentStatusRequest = ns0.BatchChangeEnrollmentStatus_Dec().pyclass

BatchChangeEnrollmentStatusResponse = ns0.BatchChangeEnrollmentStatusResponse_Dec().pyclass
