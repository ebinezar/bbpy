################################################## 
# Course_WS_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from Course_WS_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class Course_WSLocator:
    Course_WSPortType_address = "https://dev.bblearn.nau.edu/webapps/ws/services/Course.WS"
    def getCourse_WSPortTypeAddress(self):
        return Course_WSLocator.Course_WSPortType_address
    def getCourse_WSPortType(self, url=None, **kw):
        if url:
            url = url + "/webapps/ws/services/Course.WS"
            return Course_WSSOAP11BindingSOAP(url, **kw)
        else:
            return Course_WSSOAP11BindingSOAP(Course_WSLocator.Course_WSPortType_address, **kw)
        

# Methods
class Course_WSSOAP11BindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        # no ws-addressing

    # op: getCategories
    def getCategories(self, request):
        if isinstance(request, getCategoriesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getCategories", **kw)
        # no output wsaction
        response = self.binding.Receive(getCategoriesResponse.typecode)
        return response

    # op: initializeCourseWS
    def initializeCourseWS(self, request):
        if isinstance(request, initializeCourseWSRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="initializeCourseWS", **kw)
        # no output wsaction
        response = self.binding.Receive(initializeCourseWSResponse.typecode)
        return response

    # op: getCourse
    def getCourse(self, request):
        if isinstance(request, getCourseRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="loadCourse", **kw)
        # no output wsaction
        response = self.binding.Receive(getCourseResponse.typecode)
        return response

    # op: getCourseCategoryMembership
    def getCourseCategoryMembership(self, request):
        if isinstance(request, getCourseCategoryMembershipRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getCourseCategoryMembership", **kw)
        # no output wsaction
        response = self.binding.Receive(getCourseCategoryMembershipResponse.typecode)
        return response

    # op: createCourse
    def createCourse(self, request):
        if isinstance(request, createCourseRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="createCourse", **kw)
        # no output wsaction
        response = self.binding.Receive(createCourseResponse.typecode)
        return response

    # op: changeOrgBatchUid
    def changeOrgBatchUid(self, request):
        if isinstance(request, changeOrgBatchUidRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="changeOrgBatchUid", **kw)
        # no output wsaction
        response = self.binding.Receive(changeOrgBatchUidResponse.typecode)
        return response

    # op: deleteOrg
    def deleteOrg(self, request):
        if isinstance(request, deleteOrgRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="deleteOrg", **kw)
        # no output wsaction
        response = self.binding.Receive(deleteOrgResponse.typecode)
        return response

    # op: saveCourseCategory
    def saveCourseCategory(self, request):
        if isinstance(request, saveCourseCategoryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="saveCourseCategory", **kw)
        # no output wsaction
        response = self.binding.Receive(saveCourseCategoryResponse.typecode)
        return response

    # op: updateCourse
    def updateCourse(self, request):
        if isinstance(request, updateCourseRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="updateCourse", **kw)
        # no output wsaction
        response = self.binding.Receive(updateCourseResponse.typecode)
        return response

    # op: saveGroup
    def saveGroup(self, request):
        if isinstance(request, saveGroupRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="saveGroup", **kw)
        # no output wsaction
        response = self.binding.Receive(saveGroupResponse.typecode)
        return response

    # op: deleteStaffInfo
    def deleteStaffInfo(self, request):
        if isinstance(request, deleteStaffInfoRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="deleteStaffInfo", **kw)
        # no output wsaction
        response = self.binding.Receive(deleteStaffInfoResponse.typecode)
        return response

    # op: deleteCartridge
    def deleteCartridge(self, request):
        if isinstance(request, deleteCartridgeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="deleteCartridge", **kw)
        # no output wsaction
        response = self.binding.Receive(deleteCartridgeResponse.typecode)
        return response

    # op: getAvailableGroupTools
    def getAvailableGroupTools(self, request):
        if isinstance(request, getAvailableGroupToolsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getAvailableGroupTools", **kw)
        # no output wsaction
        response = self.binding.Receive(getAvailableGroupToolsResponse.typecode)
        return response

    # op: saveStaffInfo
    def saveStaffInfo(self, request):
        if isinstance(request, saveStaffInfoRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="saveStaffInfo", **kw)
        # no output wsaction
        response = self.binding.Receive(saveStaffInfoResponse.typecode)
        return response

    # op: saveOrgCategory
    def saveOrgCategory(self, request):
        if isinstance(request, saveOrgCategoryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="saveOrgCategory", **kw)
        # no output wsaction
        response = self.binding.Receive(saveOrgCategoryResponse.typecode)
        return response

    # op: deleteGroup
    def deleteGroup(self, request):
        if isinstance(request, deleteGroupRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="deleteGroup", **kw)
        # no output wsaction
        response = self.binding.Receive(deleteGroupResponse.typecode)
        return response

    # op: getGroup
    def getGroup(self, request):
        if isinstance(request, getGroupRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getGroup", **kw)
        # no output wsaction
        response = self.binding.Receive(getGroupResponse.typecode)
        return response

    # op: deleteCourseCategoryMembership
    def deleteCourseCategoryMembership(self, request):
        if isinstance(request, deleteCourseCategoryMembershipRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="deleteCourseCategoryMembership", **kw)
        # no output wsaction
        response = self.binding.Receive(deleteCourseCategoryMembershipResponse.typecode)
        return response

    # op: getServerVersion
    def getServerVersion(self, request):
        if isinstance(request, getServerVersionRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getServerVersion", **kw)
        # no output wsaction
        response = self.binding.Receive(getServerVersionResponse.typecode)
        return response

    # op: saveCourse
    def saveCourse(self, request):
        if isinstance(request, saveCourseRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="saveCourse", **kw)
        # no output wsaction
        response = self.binding.Receive(saveCourseResponse.typecode)
        return response

    # op: saveCartridge
    def saveCartridge(self, request):
        if isinstance(request, saveCartridgeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="saveCartridge", **kw)
        # no output wsaction
        response = self.binding.Receive(saveCartridgeResponse.typecode)
        return response

    # op: saveOrgCategoryMembership
    def saveOrgCategoryMembership(self, request):
        if isinstance(request, saveOrgCategoryMembershipRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="saveOrgCategoryMembership", **kw)
        # no output wsaction
        response = self.binding.Receive(saveOrgCategoryMembershipResponse.typecode)
        return response

    # op: deleteCourse
    def deleteCourse(self, request):
        if isinstance(request, deleteCourseRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="deleteCourse", **kw)
        # no output wsaction
        response = self.binding.Receive(deleteCourseResponse.typecode)
        return response

    # op: createOrg
    def createOrg(self, request):
        if isinstance(request, createOrgRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="createOrg", **kw)
        # no output wsaction
        response = self.binding.Receive(createOrgResponse.typecode)
        return response

    # op: changeOrgCategoryBatchUid
    def changeOrgCategoryBatchUid(self, request):
        if isinstance(request, changeOrgCategoryBatchUidRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="changeOrgCategoryBatchUid", **kw)
        # no output wsaction
        response = self.binding.Receive(changeOrgCategoryBatchUidResponse.typecode)
        return response

    # op: deleteOrgCategoryMembership
    def deleteOrgCategoryMembership(self, request):
        if isinstance(request, deleteOrgCategoryMembershipRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="deleteOrgCategoryMembership", **kw)
        # no output wsaction
        response = self.binding.Receive(deleteOrgCategoryMembershipResponse.typecode)
        return response

    # op: getStaffInfo
    def getStaffInfo(self, request):
        if isinstance(request, getStaffInfoRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getStaffInfo", **kw)
        # no output wsaction
        response = self.binding.Receive(getStaffInfoResponse.typecode)
        return response

    # op: getClassifications
    def getClassifications(self, request):
        if isinstance(request, getClassificationsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getClassifications", **kw)
        # no output wsaction
        response = self.binding.Receive(getClassificationsResponse.typecode)
        return response

    # op: getOrg
    def getOrg(self, request):
        if isinstance(request, getOrgRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="loadOrg", **kw)
        # no output wsaction
        response = self.binding.Receive(getOrgResponse.typecode)
        return response

    # op: saveCourseCategoryMembership
    def saveCourseCategoryMembership(self, request):
        if isinstance(request, saveCourseCategoryMembershipRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="saveCourseCategoryMembership", **kw)
        # no output wsaction
        response = self.binding.Receive(saveCourseCategoryMembershipResponse.typecode)
        return response

    # op: getOrgCategoryMembership
    def getOrgCategoryMembership(self, request):
        if isinstance(request, getOrgCategoryMembershipRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getOrgCategoryMembership", **kw)
        # no output wsaction
        response = self.binding.Receive(getOrgCategoryMembershipResponse.typecode)
        return response

    # op: updateOrg
    def updateOrg(self, request):
        if isinstance(request, updateOrgRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="updateOrg", **kw)
        # no output wsaction
        response = self.binding.Receive(updateOrgResponse.typecode)
        return response

    # op: setCourseBannerImage
    def setCourseBannerImage(self, request):
        if isinstance(request, setCourseBannerImageRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="setCourseBannerImage", **kw)
        # no output wsaction
        response = self.binding.Receive(setCourseBannerImageResponse.typecode)
        return response

    # op: changeCourseBatchUid
    def changeCourseBatchUid(self, request):
        if isinstance(request, changeCourseBatchUidRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="changeCourseBatchUid", **kw)
        # no output wsaction
        response = self.binding.Receive(changeCourseBatchUidResponse.typecode)
        return response

    # op: changeCourseCategoryBatchUid
    def changeCourseCategoryBatchUid(self, request):
        if isinstance(request, changeCourseCategoryBatchUidRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="changeCourseCategoryBatchUid", **kw)
        # no output wsaction
        response = self.binding.Receive(changeCourseCategoryBatchUidResponse.typecode)
        return response

    # op: deleteOrgCategory
    def deleteOrgCategory(self, request):
        if isinstance(request, deleteOrgCategoryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="deleteOrgCategory", **kw)
        # no output wsaction
        response = self.binding.Receive(deleteOrgCategoryResponse.typecode)
        return response

    # op: getCartridge
    def getCartridge(self, request):
        if isinstance(request, getCartridgeRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="getCartridge", **kw)
        # no output wsaction
        response = self.binding.Receive(getCartridgeResponse.typecode)
        return response

    # op: changeCourseDataSourceId
    def changeCourseDataSourceId(self, request):
        if isinstance(request, changeCourseDataSourceIdRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="changeCourseDataSourceId", **kw)
        # no output wsaction
        response = self.binding.Receive(changeCourseDataSourceIdResponse.typecode)
        return response

    # op: changeOrgDataSourceId
    def changeOrgDataSourceId(self, request):
        if isinstance(request, changeOrgDataSourceIdRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="changeOrgDataSourceId", **kw)
        # no output wsaction
        response = self.binding.Receive(changeOrgDataSourceIdResponse.typecode)
        return response

    # op: deleteCourseCategory
    def deleteCourseCategory(self, request):
        if isinstance(request, deleteCourseCategoryRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="deleteCourseCategory", **kw)
        # no output wsaction
        response = self.binding.Receive(deleteCourseCategoryResponse.typecode)
        return response

getCategoriesRequest = course_ns2.getCategories_Dec().pyclass

getCategoriesResponse = course_ns2.getCategoriesResponse_Dec().pyclass

initializeCourseWSRequest = course_ns2.initializeCourseWS_Dec().pyclass

initializeCourseWSResponse = course_ns2.initializeCourseWSResponse_Dec().pyclass

getCourseRequest = course_ns2.getCourse_Dec().pyclass

getCourseResponse = course_ns2.getCourseResponse_Dec().pyclass

getCourseCategoryMembershipRequest = course_ns2.getCourseCategoryMembership_Dec().pyclass

getCourseCategoryMembershipResponse = course_ns2.getCourseCategoryMembershipResponse_Dec().pyclass

createCourseRequest = course_ns2.createCourse_Dec().pyclass

createCourseResponse = course_ns2.createCourseResponse_Dec().pyclass

changeOrgBatchUidRequest = course_ns2.changeOrgBatchUid_Dec().pyclass

changeOrgBatchUidResponse = course_ns2.changeOrgBatchUidResponse_Dec().pyclass

deleteOrgRequest = course_ns2.deleteOrg_Dec().pyclass

deleteOrgResponse = course_ns2.deleteOrgResponse_Dec().pyclass

saveCourseCategoryRequest = course_ns2.saveCourseCategory_Dec().pyclass

saveCourseCategoryResponse = course_ns2.saveCourseCategoryResponse_Dec().pyclass

updateCourseRequest = course_ns2.updateCourse_Dec().pyclass

updateCourseResponse = course_ns2.updateCourseResponse_Dec().pyclass

saveGroupRequest = course_ns2.saveGroup_Dec().pyclass

saveGroupResponse = course_ns2.saveGroupResponse_Dec().pyclass

deleteStaffInfoRequest = course_ns2.deleteStaffInfo_Dec().pyclass

deleteStaffInfoResponse = course_ns2.deleteStaffInfoResponse_Dec().pyclass

deleteCartridgeRequest = course_ns2.deleteCartridge_Dec().pyclass

deleteCartridgeResponse = course_ns2.deleteCartridgeResponse_Dec().pyclass

getAvailableGroupToolsRequest = course_ns2.getAvailableGroupTools_Dec().pyclass

getAvailableGroupToolsResponse = course_ns2.getAvailableGroupToolsResponse_Dec().pyclass

saveStaffInfoRequest = course_ns2.saveStaffInfo_Dec().pyclass

saveStaffInfoResponse = course_ns2.saveStaffInfoResponse_Dec().pyclass

saveOrgCategoryRequest = course_ns2.saveOrgCategory_Dec().pyclass

saveOrgCategoryResponse = course_ns2.saveOrgCategoryResponse_Dec().pyclass

deleteGroupRequest = course_ns2.deleteGroup_Dec().pyclass

deleteGroupResponse = course_ns2.deleteGroupResponse_Dec().pyclass

getGroupRequest = course_ns2.getGroup_Dec().pyclass

getGroupResponse = course_ns2.getGroupResponse_Dec().pyclass

deleteCourseCategoryMembershipRequest = course_ns2.deleteCourseCategoryMembership_Dec().pyclass

deleteCourseCategoryMembershipResponse = course_ns2.deleteCourseCategoryMembershipResponse_Dec().pyclass

getServerVersionRequest = course_ns2.getServerVersion_Dec().pyclass

getServerVersionResponse = course_ns2.getServerVersionResponse_Dec().pyclass

saveCourseRequest = course_ns2.saveCourse_Dec().pyclass

saveCourseResponse = course_ns2.saveCourseResponse_Dec().pyclass

saveCartridgeRequest = course_ns2.saveCartridge_Dec().pyclass

saveCartridgeResponse = course_ns2.saveCartridgeResponse_Dec().pyclass

saveOrgCategoryMembershipRequest = course_ns2.saveOrgCategoryMembership_Dec().pyclass

saveOrgCategoryMembershipResponse = course_ns2.saveOrgCategoryMembershipResponse_Dec().pyclass

deleteCourseRequest = course_ns2.deleteCourse_Dec().pyclass

deleteCourseResponse = course_ns2.deleteCourseResponse_Dec().pyclass

createOrgRequest = course_ns2.createOrg_Dec().pyclass

createOrgResponse = course_ns2.createOrgResponse_Dec().pyclass

changeOrgCategoryBatchUidRequest = course_ns2.changeOrgCategoryBatchUid_Dec().pyclass

changeOrgCategoryBatchUidResponse = course_ns2.changeOrgCategoryBatchUidResponse_Dec().pyclass

deleteOrgCategoryMembershipRequest = course_ns2.deleteOrgCategoryMembership_Dec().pyclass

deleteOrgCategoryMembershipResponse = course_ns2.deleteOrgCategoryMembershipResponse_Dec().pyclass

getStaffInfoRequest = course_ns2.getStaffInfo_Dec().pyclass

getStaffInfoResponse = course_ns2.getStaffInfoResponse_Dec().pyclass

getClassificationsRequest = course_ns2.getClassifications_Dec().pyclass

getClassificationsResponse = course_ns2.getClassificationsResponse_Dec().pyclass

getOrgRequest = course_ns2.getOrg_Dec().pyclass

getOrgResponse = course_ns2.getOrgResponse_Dec().pyclass

saveCourseCategoryMembershipRequest = course_ns2.saveCourseCategoryMembership_Dec().pyclass

saveCourseCategoryMembershipResponse = course_ns2.saveCourseCategoryMembershipResponse_Dec().pyclass

getOrgCategoryMembershipRequest = course_ns2.getOrgCategoryMembership_Dec().pyclass

getOrgCategoryMembershipResponse = course_ns2.getOrgCategoryMembershipResponse_Dec().pyclass

updateOrgRequest = course_ns2.updateOrg_Dec().pyclass

updateOrgResponse = course_ns2.updateOrgResponse_Dec().pyclass

setCourseBannerImageRequest = course_ns2.setCourseBannerImage_Dec().pyclass

setCourseBannerImageResponse = course_ns2.setCourseBannerImageResponse_Dec().pyclass

changeCourseBatchUidRequest = course_ns2.changeCourseBatchUid_Dec().pyclass

changeCourseBatchUidResponse = course_ns2.changeCourseBatchUidResponse_Dec().pyclass

changeCourseCategoryBatchUidRequest = course_ns2.changeCourseCategoryBatchUid_Dec().pyclass

changeCourseCategoryBatchUidResponse = course_ns2.changeCourseCategoryBatchUidResponse_Dec().pyclass

deleteOrgCategoryRequest = course_ns2.deleteOrgCategory_Dec().pyclass

deleteOrgCategoryResponse = course_ns2.deleteOrgCategoryResponse_Dec().pyclass

getCartridgeRequest = course_ns2.getCartridge_Dec().pyclass

getCartridgeResponse = course_ns2.getCartridgeResponse_Dec().pyclass

changeCourseDataSourceIdRequest = course_ns2.changeCourseDataSourceId_Dec().pyclass

changeCourseDataSourceIdResponse = course_ns2.changeCourseDataSourceIdResponse_Dec().pyclass

changeOrgDataSourceIdRequest = course_ns2.changeOrgDataSourceId_Dec().pyclass

changeOrgDataSourceIdResponse = course_ns2.changeOrgDataSourceIdResponse_Dec().pyclass

deleteCourseCategoryRequest = course_ns2.deleteCourseCategory_Dec().pyclass

deleteCourseCategoryResponse = course_ns2.deleteCourseCategoryResponse_Dec().pyclass
